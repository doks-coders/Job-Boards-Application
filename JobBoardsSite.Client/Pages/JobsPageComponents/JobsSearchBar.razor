

<MudGrid>
	<MudItem xs="12" md="6">
		<MudTextField @bind-Value="@_normalText" HelperText="@_normalText" Label="Search Job Title, Keywords" Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Search" />
	</MudItem>
	<MudItem xs="12" md="6">
		<SearchItem Label="Country" Value="@Country" SearchItems="Nigeria||Ghana||South America" ValueChanged="(e)=>{Country = e;}" />
	</MudItem>
	<MudItem xs="12" md="6">
		<MultiChipSelectComponent Skills="Javascript||Nodejs||Visual Studio||Python"
								  Label="Skill"
								  ValueChanged="(e)=>{SelectedSkills = e;}" />


	</MudItem>
</MudGrid>
	

	<!--Multi Select-->

	





@code {
	public string _normalText = "";



	//->Multi Select
	private bool multiselectionTextChoice = true;
	private string value { get; set; } = "Nothing selected";
	private string Country { get; set; } = "";
	public string SelectedSkills { get; set; }
	private IEnumerable<string> options { get; set; } = new HashSet<string>() { "Coder" };

	private string[] filterTags =
	{
		"Coder", "Developer", "Real Estate", "California", "Colorado", "Connecticut"
	};

	private string GetMultiSelectionText(List<string> selectedValues)
	{
		if (multiselectionTextChoice)
		{
			return $"Selected tags {(selectedValues.Count > 1 ? "s" : "")}: {string.Join(", ", selectedValues.Select(x => x))}";
		}
		else
		{
			return $"{selectedValues.Count} state{(selectedValues.Count > 1 ? "s have" : " has")} been selected";
		}
	}
}


@code {

}
